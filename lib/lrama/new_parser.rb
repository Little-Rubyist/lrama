#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.7.1
# from Racc grammar file "".
#

require 'racc/parser.rb'
module Lrama
  class NewParser < Racc::Parser

module_eval(<<'...end parser.y/module_eval...', 'parser.y', 117)

def initialize(text)
  @text = text
  @yydebug = true
end

def parse
  @lexer = Lrama::NewLexer.new(@text)
  @grammar = Lrama::Grammar.new
  do_parse
  @grammar
end

def next_token
  @lexer.next_token
end
...end parser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    68,   103,     3,    52,     4,    57,     7,   106,    32,    33,
    32,    33,    30,    73,    39,   102,    19,    22,    23,    24,
    25,   105,    42,    27,    28,    29,    32,    33,     8,    32,
    33,    72,    11,    44,    12,    13,    74,    14,    15,    16,
    17,   108,    44,    18,    19,    22,    23,    24,    25,   108,
    44,    27,    28,    29,    32,    33,    32,    33,   109,   129,
    32,    33,    32,    33,    32,    33,   109,   129,    47,    62,
   130,   131,    32,    33,    32,    33,    32,    33,   130,   131,
    19,    22,    23,    24,    25,    32,    33,    27,    28,    29,
    32,    33,    32,    33,    32,    33,    32,    33,    32,    33,
    32,    33,    32,    33,    32,    33,    32,    33,    32,    33,
    32,    33,    32,    33,    32,    33,    48,    49,    69,    70,
    75,    75,    75,    80,    84,    91,    96,    97,    98,    99,
   104,   110,   119,   120,   121,   122,   123,   124,   134 ]

racc_action_check = [
    31,    83,     0,    24,     1,    25,     4,    93,    24,    24,
    25,    25,     6,    40,    11,    83,    31,    31,    31,    31,
    31,    93,    13,    31,    31,    31,    31,    31,     5,    12,
    12,    40,     5,    14,     5,     5,    40,     5,     5,     5,
     5,    94,    15,     5,     5,     5,     5,     5,     5,   115,
    16,     5,     5,     5,    94,    94,    51,    51,    94,   122,
    52,    52,   115,   115,   122,   122,   115,   125,    17,    26,
   122,   122,   125,   125,    26,    26,    55,    55,   125,   125,
     8,     8,     8,     8,     8,    56,    56,     8,     8,     8,
     8,     8,    57,    57,    60,    60,    61,    61,    62,    62,
    80,    80,    82,    82,    85,    85,    87,    87,    88,    88,
    90,    90,   100,   100,   109,   109,    19,    21,    36,    37,
    43,    45,    46,    50,    54,    65,    76,    77,    78,    79,
    92,    95,   111,   112,   113,   114,   116,   118,   132 ]

racc_action_pointer = [
    -1,     4,   nil,   nil,     6,    26,     8,   nil,    62,   nil,
   nil,     7,     1,    12,    18,    27,    35,    53,   nil,   101,
   nil,   102,   nil,   nil,   -20,   -18,    46,   nil,   nil,   nil,
   nil,    -2,   nil,   nil,   nil,   nil,   101,    89,   nil,   nil,
     3,   nil,   nil,   105,   nil,   106,   107,   nil,   nil,   nil,
   100,    28,    32,   nil,   117,    48,    57,    64,   nil,   nil,
    66,    68,    70,   nil,   nil,   120,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   122,   123,   124,   125,
    72,   nil,    74,    -9,   nil,    76,   nil,    78,    80,   nil,
    82,   nil,   126,   -10,    26,   127,   nil,   nil,   nil,   nil,
    84,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    86,
   nil,   116,   117,   118,   119,    34,   132,   nil,   121,   nil,
   nil,   nil,    36,   nil,   nil,    44,   nil,   nil,   nil,   nil,
   nil,   nil,   122,   nil,   nil ]

racc_action_default = [
    -2,   -95,    -6,    -3,   -95,   -95,   -95,   135,   -95,    -7,
    -8,   -95,   -95,   -95,   -95,   -95,   -95,   -95,   -18,   -95,
   -22,   -95,   -26,   -27,   -95,   -95,   -95,   -54,   -55,   -56,
    -4,   -80,   -63,   -64,   -65,   -67,   -95,   -95,   -79,    -9,
   -84,   -83,   -11,   -12,   -51,   -13,   -14,   -15,   -19,   -23,
   -28,   -31,   -95,   -34,   -37,   -29,   -42,   -95,   -45,   -47,
   -30,   -57,   -95,   -60,   -62,   -95,    -1,   -66,   -81,   -68,
   -73,   -10,   -85,   -86,   -87,   -48,   -95,   -95,   -95,   -95,
   -95,   -35,   -32,   -39,   -38,   -44,   -46,   -43,   -59,   -61,
   -58,    -5,   -95,   -69,   -70,   -95,   -52,   -16,   -20,   -24,
   -33,   -36,   -40,   -41,   -82,   -73,   -72,   -74,   -75,   -95,
   -49,   -95,   -95,   -95,   -95,   -71,   -95,   -78,   -95,   -53,
   -17,   -21,   -95,   -76,   -50,   -25,   -88,   -90,   -91,   -92,
   -93,   -94,   -95,   -89,   -77 ]

racc_goto_table = [
    38,    51,    86,    61,    41,    89,    94,    81,   126,     1,
     2,   133,    34,     5,    31,    56,    54,    66,    64,    43,
    45,    46,     6,    38,    65,     9,    10,    40,    71,    82,
    77,    86,    89,    86,    89,    67,   112,    88,    81,    90,
   107,   115,   125,    54,    54,    85,    78,    87,   113,    79,
   114,    50,    64,    64,    64,   117,    81,   100,    55,    60,
    83,   107,   101,    95,   118,    76,   111,    93,   127,   116,
   132,   127,    54,    92,    54,   nil,   nil,   nil,   nil,   nil,
    64,   nil,    64,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    54 ]

racc_goto_check = [
    28,    26,    32,    37,    28,    38,    43,    27,    47,     1,
     2,    47,    39,     3,     4,    31,    28,     5,    28,    12,
    12,    12,     6,    28,     7,     8,     9,    10,    11,    26,
    13,    32,    38,    32,    38,    39,    14,    37,    27,    37,
    32,    43,    17,    28,    28,    31,    18,    31,    19,    20,
    21,    22,    28,    28,    28,    32,    27,    26,    23,    25,
    29,    32,    30,    33,    34,    35,    36,    42,    32,    44,
    45,    32,    28,    46,    28,   nil,   nil,   nil,   nil,   nil,
    28,   nil,    28,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    28 ]

racc_goto_pointer = [
   nil,     9,    10,    11,     6,   -14,    19,    -6,    20,    21,
    15,   -12,     5,   -17,   -61,   nil,   nil,   -80,    -2,   -50,
     0,   -49,    27,    33,   nil,    33,   -23,   -44,    -8,     6,
   -21,   -10,   -54,   -12,   -46,    21,   -30,   -23,   -56,     4,
   nil,   nil,    -3,   -64,   -39,   -53,     5,  -114,   nil ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    36,
   nil,   nil,   nil,   nil,   nil,    20,    21,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    26,   nil,   nil,    53,    59,   nil,
   nil,   nil,    58,   nil,   nil,   nil,   nil,   nil,    63,   nil,
    35,    37,   nil,   nil,   nil,   nil,   nil,   nil,   128 ]

racc_reduce_table = [
  0, 0, :racc_error,
  5, 37, :_reduce_none,
  0, 38, :_reduce_none,
  0, 42, :_reduce_3,
  0, 43, :_reduce_4,
  5, 38, :_reduce_5,
  0, 39, :_reduce_6,
  2, 39, :_reduce_none,
  1, 44, :_reduce_none,
  2, 44, :_reduce_none,
  3, 44, :_reduce_none,
  2, 44, :_reduce_none,
  2, 44, :_reduce_none,
  2, 44, :_reduce_none,
  2, 44, :_reduce_none,
  0, 49, :_reduce_15,
  0, 50, :_reduce_16,
  6, 44, :_reduce_none,
  1, 44, :_reduce_none,
  0, 54, :_reduce_19,
  0, 55, :_reduce_20,
  6, 45, :_reduce_21,
  1, 45, :_reduce_none,
  0, 56, :_reduce_23,
  0, 57, :_reduce_24,
  7, 45, :_reduce_none,
  1, 52, :_reduce_none,
  1, 52, :_reduce_none,
  2, 51, :_reduce_none,
  2, 51, :_reduce_none,
  2, 51, :_reduce_none,
  1, 58, :_reduce_none,
  2, 58, :_reduce_none,
  3, 58, :_reduce_none,
  1, 62, :_reduce_none,
  2, 62, :_reduce_none,
  3, 63, :_reduce_none,
  0, 65, :_reduce_none,
  1, 65, :_reduce_none,
  0, 66, :_reduce_none,
  1, 66, :_reduce_none,
  1, 66, :_reduce_none,
  1, 59, :_reduce_none,
  2, 59, :_reduce_none,
  2, 59, :_reduce_none,
  1, 67, :_reduce_none,
  2, 67, :_reduce_none,
  1, 68, :_reduce_none,
  0, 69, :_reduce_48,
  0, 70, :_reduce_49,
  6, 48, :_reduce_none,
  0, 71, :_reduce_51,
  0, 72, :_reduce_52,
  5, 48, :_reduce_none,
  1, 60, :_reduce_none,
  1, 60, :_reduce_none,
  1, 60, :_reduce_none,
  1, 61, :_reduce_none,
  2, 61, :_reduce_none,
  2, 61, :_reduce_none,
  1, 73, :_reduce_none,
  2, 73, :_reduce_none,
  1, 74, :_reduce_none,
  1, 64, :_reduce_none,
  1, 64, :_reduce_none,
  1, 40, :_reduce_none,
  2, 40, :_reduce_none,
  1, 75, :_reduce_none,
  2, 75, :_reduce_none,
  3, 76, :_reduce_none,
  1, 78, :_reduce_none,
  3, 78, :_reduce_none,
  2, 78, :_reduce_none,
  0, 79, :_reduce_none,
  2, 79, :_reduce_none,
  0, 80, :_reduce_75,
  0, 81, :_reduce_76,
  6, 79, :_reduce_none,
  3, 79, :_reduce_none,
  1, 77, :_reduce_none,
  0, 41, :_reduce_none,
  0, 82, :_reduce_81,
  3, 41, :_reduce_82,
  1, 46, :_reduce_none,
  0, 47, :_reduce_none,
  1, 47, :_reduce_none,
  1, 47, :_reduce_none,
  1, 47, :_reduce_none,
  1, 53, :_reduce_none,
  2, 53, :_reduce_none,
  1, 83, :_reduce_none,
  1, 83, :_reduce_none,
  1, 84, :_reduce_none,
  1, 84, :_reduce_none,
  1, 84, :_reduce_none ]

racc_reduce_n = 95

racc_shift_n = 135

racc_token_table = {
  false => 0,
  :error => 1,
  "%%" => 2,
  "%{" => 3,
  :C_DECLARATION => 4,
  "%}" => 5,
  "%expect" => 6,
  :INTEGER => 7,
  "%define" => 8,
  "%require" => 9,
  :STRING => 10,
  "%param" => 11,
  "%lex-param" => 12,
  "%parse-param" => 13,
  "%initial-action" => 14,
  "{" => 15,
  "}" => 16,
  ";" => 17,
  "%union" => 18,
  "%destructor" => 19,
  "%printer" => 20,
  "%token" => 21,
  "%type" => 22,
  :TAG => 23,
  :string_as_id => 24,
  "%left" => 25,
  "%right" => 26,
  "%nonassoc" => 27,
  :IDENTIFIER => 28,
  :CHARACTER => 29,
  ":" => 30,
  "|" => 31,
  "%prec" => 32,
  "{...}" => 33,
  "<*>" => 34,
  "<>" => 35 }

racc_nt_base = 36

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]
Ractor.make_shareable(Racc_arg) if defined?(Ractor)

Racc_token_to_s_table = [
  "$end",
  "error",
  "\"%%\"",
  "\"%{\"",
  "C_DECLARATION",
  "\"%}\"",
  "\"%expect\"",
  "INTEGER",
  "\"%define\"",
  "\"%require\"",
  "STRING",
  "\"%param\"",
  "\"%lex-param\"",
  "\"%parse-param\"",
  "\"%initial-action\"",
  "\"{\"",
  "\"}\"",
  "\";\"",
  "\"%union\"",
  "\"%destructor\"",
  "\"%printer\"",
  "\"%token\"",
  "\"%type\"",
  "TAG",
  "string_as_id",
  "\"%left\"",
  "\"%right\"",
  "\"%nonassoc\"",
  "IDENTIFIER",
  "CHARACTER",
  "\":\"",
  "\"|\"",
  "\"%prec\"",
  "\"{...}\"",
  "\"<*>\"",
  "\"<>\"",
  "$start",
  "input",
  "prologue_declaration",
  "bison_declarations",
  "grammar",
  "epilogue_opt",
  "@1",
  "@2",
  "bison_declaration",
  "grammar_declaration",
  "variable",
  "value",
  "params",
  "@3",
  "@4",
  "symbol_declaration",
  "code_props_type",
  "generic_symlist",
  "@5",
  "@6",
  "@7",
  "@8",
  "token_declarations",
  "symbol_declarations",
  "precedence_declarator",
  "token_declarations_for_precedence",
  "token_declaration_list",
  "token_declaration",
  "id",
  "int_opt",
  "alias",
  "symbol_declaration_list",
  "symbol",
  "@9",
  "@10",
  "@11",
  "@12",
  "token_declaration_list_for_precedence",
  "token_declaration_for_precedence",
  "rules_or_grammar_declaration",
  "rules",
  "id_colon",
  "rhs_list",
  "rhs",
  "@13",
  "@14",
  "@15",
  "generic_symlist_item",
  "tag" ]
Ractor.make_shareable(Racc_token_to_s_table) if defined?(Ractor)

Racc_debug_parser = true

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

# reduce 2 omitted

module_eval(<<'.,.,', 'parser.y', 5)
  def _reduce_3(val, _values, result)
    @lexer.status = :c_declaration; @lexer.end_symbol = '%}'
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 5)
  def _reduce_4(val, _values, result)
    @lexer.status = :initial; @lexer.end_symbol = nil
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 5)
  def _reduce_5(val, _values, result)
     @grammar.prologue = val[2].lstrip
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 7)
  def _reduce_6(val, _values, result)
     result = ""
    result
  end
.,.,

# reduce 7 omitted

# reduce 8 omitted

# reduce 9 omitted

# reduce 10 omitted

# reduce 11 omitted

# reduce 12 omitted

# reduce 13 omitted

# reduce 14 omitted

module_eval(<<'.,.,', 'parser.y', 17)
  def _reduce_15(val, _values, result)
    @lexer.status = :c_declaration; @lexer.end_symbol = '}'
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 17)
  def _reduce_16(val, _values, result)
    @lexer.status = :initial; @lexer.end_symbol = nil
    result
  end
.,.,

# reduce 17 omitted

# reduce 18 omitted

module_eval(<<'.,.,', 'parser.y', 20)
  def _reduce_19(val, _values, result)
    @lexer.status = :c_declaration; @lexer.end_symbol = '}'
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 20)
  def _reduce_20(val, _values, result)
    @lexer.status = :initial; @lexer.end_symbol = nil
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 20)
  def _reduce_21(val, _values, result)
     token = Lrama::Lexer::Token.new(type: Lrama::Lexer::Token::User_code, s_value: "{#{val[3]}}"); token.references = []; @grammar.set_union(@grammar.build_code(:union, token), nil)
    result
  end
.,.,

# reduce 22 omitted

module_eval(<<'.,.,', 'parser.y', 22)
  def _reduce_23(val, _values, result)
    @lexer.status = :c_declaration; @lexer.end_symbol = '}'
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 22)
  def _reduce_24(val, _values, result)
    @lexer.status = :initial; @lexer.end_symbol = nil
    result
  end
.,.,

# reduce 25 omitted

# reduce 26 omitted

# reduce 27 omitted

# reduce 28 omitted

# reduce 29 omitted

# reduce 30 omitted

# reduce 31 omitted

# reduce 32 omitted

# reduce 33 omitted

# reduce 34 omitted

# reduce 35 omitted

# reduce 36 omitted

# reduce 37 omitted

# reduce 38 omitted

# reduce 39 omitted

# reduce 40 omitted

# reduce 41 omitted

# reduce 42 omitted

# reduce 43 omitted

# reduce 44 omitted

# reduce 45 omitted

# reduce 46 omitted

# reduce 47 omitted

module_eval(<<'.,.,', 'parser.y', 56)
  def _reduce_48(val, _values, result)
    @lexer.status = :c_declaration; @lexer.end_symbol = '}'
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 56)
  def _reduce_49(val, _values, result)
    @lexer.status = :initial; @lexer.end_symbol = nil
    result
  end
.,.,

# reduce 50 omitted

module_eval(<<'.,.,', 'parser.y', 57)
  def _reduce_51(val, _values, result)
    @lexer.status = :c_declaration; @lexer.end_symbol = '}'
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 57)
  def _reduce_52(val, _values, result)
    @lexer.status = :initial; @lexer.end_symbol = nil
    result
  end
.,.,

# reduce 53 omitted

# reduce 54 omitted

# reduce 55 omitted

# reduce 56 omitted

# reduce 57 omitted

# reduce 58 omitted

# reduce 59 omitted

# reduce 60 omitted

# reduce 61 omitted

# reduce 62 omitted

# reduce 63 omitted

# reduce 64 omitted

# reduce 65 omitted

# reduce 66 omitted

# reduce 67 omitted

# reduce 68 omitted

# reduce 69 omitted

# reduce 70 omitted

# reduce 71 omitted

# reduce 72 omitted

# reduce 73 omitted

# reduce 74 omitted

module_eval(<<'.,.,', 'parser.y', 89)
  def _reduce_75(val, _values, result)
    @lexer.status = :c_declaration; @lexer.end_symbol = '}'
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 89)
  def _reduce_76(val, _values, result)
    @lexer.status = :initial; @lexer.end_symbol = nil
    result
  end
.,.,

# reduce 77 omitted

# reduce 78 omitted

# reduce 79 omitted

# reduce 80 omitted

module_eval(<<'.,.,', 'parser.y', 95)
  def _reduce_81(val, _values, result)
    @lexer.status = :c_declaration; @lexer.end_symbol = '\Z'
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 95)
  def _reduce_82(val, _values, result)
    @lexer.status = :initial; @lexer.end_symbol = nil
    result
  end
.,.,

# reduce 83 omitted

# reduce 84 omitted

# reduce 85 omitted

# reduce 86 omitted

# reduce 87 omitted

# reduce 88 omitted

# reduce 89 omitted

# reduce 90 omitted

# reduce 91 omitted

# reduce 92 omitted

# reduce 93 omitted

# reduce 94 omitted

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class NewParser
end   # module Lrama
