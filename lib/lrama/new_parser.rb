#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.7.1
# from Racc grammar file "".
#

require 'racc/parser.rb'
module Lrama
  class NewParser < Racc::Parser

module_eval(<<'...end parser.y/module_eval...', 'parser.y', 115)

def initialize(text)
  @text = text
  @yydebug = true
end

def parse
  @lexer = Lrama::NewLexer.new(@text)
  @grammar = do_parse.tap { p _1 }
end

def next_token
  @lexer.next_token
end
...end parser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    65,   101,     3,    50,    27,    55,    37,   104,    29,    30,
    29,    30,    40,    71,    42,   100,    16,    19,    20,    21,
    22,   103,    42,    24,    25,    26,    29,    30,     4,     7,
    42,    70,     8,    45,     9,    10,    72,    11,    12,    13,
    14,   106,    46,    15,    16,    19,    20,    21,    22,   106,
    47,    24,    25,    26,    29,    30,    29,    30,   107,   128,
    29,    30,    29,    30,    29,    30,   107,   128,    66,    60,
   129,   130,    29,    30,    29,    30,    29,    30,   129,   130,
    16,    19,    20,    21,    22,    29,    30,    24,    25,    26,
    29,    30,    29,    30,    29,    30,    29,    30,    29,    30,
    29,    30,    29,    30,    29,    30,    29,    30,    29,    30,
    29,    30,    29,    30,    29,    30,    29,    30,    67,    68,
    73,    73,    73,    78,    82,    94,    95,    96,    97,   102,
   108,   109,   118,   119,   120,   121,   122,   123,   133 ]

racc_action_check = [
    28,    81,     1,    21,     3,    22,     8,    90,    21,    21,
    22,    22,    10,    38,    11,    81,    28,    28,    28,    28,
    28,    90,    12,    28,    28,    28,    28,    28,     2,     2,
    13,    38,     2,    14,     2,     2,    38,     2,     2,     2,
     2,    91,    16,     2,     2,     2,     2,     2,     2,   114,
    18,     2,     2,     2,    91,    91,     9,     9,    91,   121,
    49,    49,   114,   114,   121,   121,   114,   124,    33,    23,
   121,   121,   124,   124,    23,    23,    50,    50,   124,   124,
     4,     4,     4,     4,     4,    53,    53,     4,     4,     4,
     4,     4,    54,    54,    55,    55,    58,    58,    59,    59,
    60,    60,    78,    78,    80,    80,    83,    83,    85,    85,
    86,    86,    88,    88,    98,    98,   107,   107,    34,    36,
    41,    43,    44,    48,    52,    74,    75,    76,    77,    89,
    92,    93,   110,   111,   112,   113,   115,   117,   131 ]

racc_action_pointer = [
   nil,     2,    26,     4,    62,   nil,   nil,   nil,    -1,    28,
     2,    -1,     7,    15,    18,   nil,    27,   nil,    35,   nil,
   nil,   -20,   -18,    46,   nil,   nil,   nil,   nil,    -2,   nil,
   nil,   nil,   nil,    51,    88,   nil,   115,   nil,     3,   nil,
   nil,   105,   nil,   106,   107,   nil,   nil,   nil,   100,    32,
    48,   nil,   117,    57,    64,    66,   nil,   nil,    68,    70,
    72,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   121,   122,   123,   124,    74,   nil,
    76,    -9,   nil,    78,   nil,    80,    82,   nil,    84,   125,
   -10,    26,   125,   127,   nil,   nil,   nil,   nil,    86,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    88,   nil,   nil,
   116,   117,   118,   119,    34,   132,   nil,   121,   nil,   nil,
   nil,    36,   nil,   nil,    44,   nil,   nil,   nil,   nil,   nil,
   nil,   122,   nil,   nil ]

racc_action_default = [
    -2,   -94,   -94,   -94,   -94,    -3,    -4,    -5,   -94,   -94,
   -94,   -94,   -94,   -94,   -94,   -17,   -94,   -21,   -94,   -25,
   -26,   -94,   -94,   -94,   -53,   -54,   -55,   134,   -79,   -62,
   -63,   -64,   -66,   -94,   -94,   -78,   -94,    -8,   -83,   -82,
   -10,   -11,   -50,   -12,   -13,   -14,   -18,   -22,   -27,   -30,
   -94,   -33,   -36,   -28,   -41,   -94,   -44,   -46,   -29,   -56,
   -94,   -59,   -61,    -1,   -65,   -80,   -67,   -72,    -6,    -9,
   -84,   -85,   -86,   -47,   -94,   -94,   -94,   -94,   -94,   -34,
   -31,   -38,   -37,   -43,   -45,   -42,   -58,   -60,   -57,   -94,
   -68,   -69,   -94,   -94,   -51,   -15,   -19,   -23,   -32,   -35,
   -39,   -40,   -81,   -72,   -71,   -73,   -74,   -94,    -7,   -48,
   -94,   -94,   -94,   -94,   -70,   -94,   -77,   -94,   -52,   -16,
   -20,   -94,   -75,   -49,   -24,   -87,   -89,   -90,   -91,   -92,
   -93,   -94,   -88,   -76 ]

racc_goto_table = [
    35,    49,    79,    59,    54,    39,    91,    87,    31,   125,
    84,     1,   132,    41,    43,    44,     2,    52,    28,    62,
    63,     5,     6,    38,    35,    69,    36,    92,    75,   111,
    80,   124,    64,    79,    87,    83,    87,    85,    86,    84,
    88,    84,   114,    76,   112,    52,    52,   105,    77,   113,
    48,    79,    53,    58,    62,    62,    62,    81,    98,    99,
    93,   117,    74,   116,   110,    90,   115,   131,    89,   nil,
   105,   nil,   nil,   nil,    52,   nil,    52,   126,   nil,   nil,
   126,   nil,    62,   nil,    62,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    52 ]

racc_goto_check = [
    27,    25,    26,    36,    30,    27,    42,    37,    38,    46,
    31,     1,    46,     9,     9,     9,     2,    27,     3,    27,
     4,     5,     6,     7,    27,     8,    10,    11,    12,    13,
    25,    16,    38,    26,    37,    30,    37,    30,    36,    31,
    36,    31,    42,    17,    18,    27,    27,    31,    19,    20,
    21,    26,    22,    24,    27,    27,    27,    28,    25,    29,
    32,    33,    34,    31,    35,    41,    43,    44,    45,   nil,
    31,   nil,   nil,   nil,    27,   nil,    27,    31,   nil,   nil,
    31,   nil,    27,   nil,    27,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    27 ]

racc_goto_pointer = [
   nil,    11,    16,    14,    -8,    19,    20,    14,   -13,     2,
    19,   -41,   -17,   -66,   nil,   nil,   -90,    -3,   -52,     1,
   -48,    29,    30,   nil,    30,   -20,   -47,    -4,     5,   -22,
   -18,   -44,   -13,   -48,    20,   -30,   -20,   -52,     4,   nil,
   nil,    -2,   -61,   -40,   -55,     3,  -112,   nil ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,   nil,    33,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,    17,    18,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    23,   nil,   nil,    51,    57,   nil,   nil,
   nil,    56,   nil,   nil,   nil,   nil,   nil,    61,   nil,    32,
    34,   nil,   nil,   nil,   nil,   nil,   nil,   127 ]

racc_reduce_table = [
  0, 0, :racc_error,
  4, 37, :_reduce_1,
  0, 38, :_reduce_2,
  2, 38, :_reduce_3,
  1, 41, :_reduce_none,
  0, 46, :_reduce_5,
  0, 47, :_reduce_6,
  5, 41, :_reduce_7,
  2, 41, :_reduce_none,
  3, 41, :_reduce_none,
  2, 41, :_reduce_none,
  2, 41, :_reduce_none,
  2, 41, :_reduce_none,
  2, 41, :_reduce_none,
  0, 48, :_reduce_14,
  0, 49, :_reduce_15,
  6, 41, :_reduce_none,
  1, 41, :_reduce_none,
  0, 53, :_reduce_18,
  0, 54, :_reduce_19,
  6, 42, :_reduce_none,
  1, 42, :_reduce_none,
  0, 55, :_reduce_22,
  0, 56, :_reduce_23,
  7, 42, :_reduce_none,
  1, 51, :_reduce_none,
  1, 51, :_reduce_none,
  2, 50, :_reduce_none,
  2, 50, :_reduce_none,
  2, 50, :_reduce_none,
  1, 57, :_reduce_none,
  2, 57, :_reduce_none,
  3, 57, :_reduce_none,
  1, 61, :_reduce_none,
  2, 61, :_reduce_none,
  3, 62, :_reduce_none,
  0, 64, :_reduce_none,
  1, 64, :_reduce_none,
  0, 65, :_reduce_none,
  1, 65, :_reduce_none,
  1, 65, :_reduce_none,
  1, 58, :_reduce_none,
  2, 58, :_reduce_none,
  2, 58, :_reduce_none,
  1, 66, :_reduce_none,
  2, 66, :_reduce_none,
  1, 67, :_reduce_none,
  0, 68, :_reduce_47,
  0, 69, :_reduce_48,
  6, 45, :_reduce_none,
  0, 70, :_reduce_50,
  0, 71, :_reduce_51,
  5, 45, :_reduce_none,
  1, 59, :_reduce_none,
  1, 59, :_reduce_none,
  1, 59, :_reduce_none,
  1, 60, :_reduce_none,
  2, 60, :_reduce_none,
  2, 60, :_reduce_none,
  1, 72, :_reduce_none,
  2, 72, :_reduce_none,
  1, 73, :_reduce_none,
  1, 63, :_reduce_none,
  1, 63, :_reduce_none,
  1, 39, :_reduce_none,
  2, 39, :_reduce_none,
  1, 74, :_reduce_none,
  2, 74, :_reduce_none,
  3, 75, :_reduce_none,
  1, 77, :_reduce_none,
  3, 77, :_reduce_none,
  2, 77, :_reduce_none,
  0, 78, :_reduce_none,
  2, 78, :_reduce_none,
  0, 79, :_reduce_74,
  0, 80, :_reduce_75,
  6, 78, :_reduce_none,
  3, 78, :_reduce_none,
  1, 76, :_reduce_none,
  0, 40, :_reduce_none,
  0, 81, :_reduce_80,
  3, 40, :_reduce_81,
  1, 43, :_reduce_none,
  0, 44, :_reduce_none,
  1, 44, :_reduce_none,
  1, 44, :_reduce_none,
  1, 44, :_reduce_none,
  1, 52, :_reduce_none,
  2, 52, :_reduce_none,
  1, 82, :_reduce_none,
  1, 82, :_reduce_none,
  1, 83, :_reduce_none,
  1, 83, :_reduce_none,
  1, 83, :_reduce_none ]

racc_reduce_n = 94

racc_shift_n = 134

racc_token_table = {
  false => 0,
  :error => 1,
  "%%" => 2,
  "%{" => 3,
  :C_DECLARATION => 4,
  "%}" => 5,
  "%expect" => 6,
  :INTEGER => 7,
  "%define" => 8,
  "%require" => 9,
  :STRING => 10,
  "%param" => 11,
  "%lex-param" => 12,
  "%parse-param" => 13,
  "%initial-action" => 14,
  "{" => 15,
  "}" => 16,
  ";" => 17,
  "%union" => 18,
  "%destructor" => 19,
  "%printer" => 20,
  "%token" => 21,
  "%type" => 22,
  :TAG => 23,
  :string_as_id => 24,
  "%left" => 25,
  "%right" => 26,
  "%nonassoc" => 27,
  :IDENTIFIER => 28,
  :CHARACTER => 29,
  ":" => 30,
  "|" => 31,
  "%prec" => 32,
  "{...}" => 33,
  "<*>" => 34,
  "<>" => 35 }

racc_nt_base = 36

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]
Ractor.make_shareable(Racc_arg) if defined?(Ractor)

Racc_token_to_s_table = [
  "$end",
  "error",
  "\"%%\"",
  "\"%{\"",
  "C_DECLARATION",
  "\"%}\"",
  "\"%expect\"",
  "INTEGER",
  "\"%define\"",
  "\"%require\"",
  "STRING",
  "\"%param\"",
  "\"%lex-param\"",
  "\"%parse-param\"",
  "\"%initial-action\"",
  "\"{\"",
  "\"}\"",
  "\";\"",
  "\"%union\"",
  "\"%destructor\"",
  "\"%printer\"",
  "\"%token\"",
  "\"%type\"",
  "TAG",
  "string_as_id",
  "\"%left\"",
  "\"%right\"",
  "\"%nonassoc\"",
  "IDENTIFIER",
  "CHARACTER",
  "\":\"",
  "\"|\"",
  "\"%prec\"",
  "\"{...}\"",
  "\"<*>\"",
  "\"<>\"",
  "$start",
  "input",
  "prologue_declarations",
  "grammar",
  "epilogue_opt",
  "prologue_declaration",
  "grammar_declaration",
  "variable",
  "value",
  "params",
  "@1",
  "@2",
  "@3",
  "@4",
  "symbol_declaration",
  "code_props_type",
  "generic_symlist",
  "@5",
  "@6",
  "@7",
  "@8",
  "token_declarations",
  "symbol_declarations",
  "precedence_declarator",
  "token_declarations_for_precedence",
  "token_declaration_list",
  "token_declaration",
  "id",
  "int_opt",
  "alias",
  "symbol_declaration_list",
  "symbol",
  "@9",
  "@10",
  "@11",
  "@12",
  "token_declaration_list_for_precedence",
  "token_declaration_for_precedence",
  "rules_or_grammar_declaration",
  "rules",
  "id_colon",
  "rhs_list",
  "rhs",
  "@13",
  "@14",
  "@15",
  "generic_symlist_item",
  "tag" ]
Ractor.make_shareable(Racc_token_to_s_table) if defined?(Ractor)

Racc_debug_parser = true

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'parser.y', 2)
  def _reduce_1(val, _values, result)
     result = Lrama::Grammar.new; result.prologue = val[0]
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 4)
  def _reduce_2(val, _values, result)
     result = ""
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 5)
  def _reduce_3(val, _values, result)
     result = val[0] + val[1]
    result
  end
.,.,

# reduce 4 omitted

module_eval(<<'.,.,', 'parser.y', 8)
  def _reduce_5(val, _values, result)
    @lexer.status = :c_declaration; @lexer.end_symbol = '%}'
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 8)
  def _reduce_6(val, _values, result)
    @lexer.status = :initial; @lexer.end_symbol = nil
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 8)
  def _reduce_7(val, _values, result)
     result = val[2]
    result
  end
.,.,

# reduce 8 omitted

# reduce 9 omitted

# reduce 10 omitted

# reduce 11 omitted

# reduce 12 omitted

# reduce 13 omitted

module_eval(<<'.,.,', 'parser.y', 15)
  def _reduce_14(val, _values, result)
    @lexer.status = :c_declaration; @lexer.end_symbol = '}'
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 15)
  def _reduce_15(val, _values, result)
    @lexer.status = :initial; @lexer.end_symbol = nil
    result
  end
.,.,

# reduce 16 omitted

# reduce 17 omitted

module_eval(<<'.,.,', 'parser.y', 18)
  def _reduce_18(val, _values, result)
    @lexer.status = :c_declaration; @lexer.end_symbol = '}'
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 18)
  def _reduce_19(val, _values, result)
    @lexer.status = :initial; @lexer.end_symbol = nil
    result
  end
.,.,

# reduce 20 omitted

# reduce 21 omitted

module_eval(<<'.,.,', 'parser.y', 20)
  def _reduce_22(val, _values, result)
    @lexer.status = :c_declaration; @lexer.end_symbol = '}'
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 20)
  def _reduce_23(val, _values, result)
    @lexer.status = :initial; @lexer.end_symbol = nil
    result
  end
.,.,

# reduce 24 omitted

# reduce 25 omitted

# reduce 26 omitted

# reduce 27 omitted

# reduce 28 omitted

# reduce 29 omitted

# reduce 30 omitted

# reduce 31 omitted

# reduce 32 omitted

# reduce 33 omitted

# reduce 34 omitted

# reduce 35 omitted

# reduce 36 omitted

# reduce 37 omitted

# reduce 38 omitted

# reduce 39 omitted

# reduce 40 omitted

# reduce 41 omitted

# reduce 42 omitted

# reduce 43 omitted

# reduce 44 omitted

# reduce 45 omitted

# reduce 46 omitted

module_eval(<<'.,.,', 'parser.y', 54)
  def _reduce_47(val, _values, result)
    @lexer.status = :c_declaration; @lexer.end_symbol = '}'
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 54)
  def _reduce_48(val, _values, result)
    @lexer.status = :initial; @lexer.end_symbol = nil
    result
  end
.,.,

# reduce 49 omitted

module_eval(<<'.,.,', 'parser.y', 55)
  def _reduce_50(val, _values, result)
    @lexer.status = :c_declaration; @lexer.end_symbol = '}'
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 55)
  def _reduce_51(val, _values, result)
    @lexer.status = :initial; @lexer.end_symbol = nil
    result
  end
.,.,

# reduce 52 omitted

# reduce 53 omitted

# reduce 54 omitted

# reduce 55 omitted

# reduce 56 omitted

# reduce 57 omitted

# reduce 58 omitted

# reduce 59 omitted

# reduce 60 omitted

# reduce 61 omitted

# reduce 62 omitted

# reduce 63 omitted

# reduce 64 omitted

# reduce 65 omitted

# reduce 66 omitted

# reduce 67 omitted

# reduce 68 omitted

# reduce 69 omitted

# reduce 70 omitted

# reduce 71 omitted

# reduce 72 omitted

# reduce 73 omitted

module_eval(<<'.,.,', 'parser.y', 87)
  def _reduce_74(val, _values, result)
    @lexer.status = :c_declaration; @lexer.end_symbol = '}'
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 87)
  def _reduce_75(val, _values, result)
    @lexer.status = :initial; @lexer.end_symbol = nil
    result
  end
.,.,

# reduce 76 omitted

# reduce 77 omitted

# reduce 78 omitted

# reduce 79 omitted

module_eval(<<'.,.,', 'parser.y', 93)
  def _reduce_80(val, _values, result)
    @lexer.status = :c_declaration; @lexer.end_symbol = '\Z'
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 93)
  def _reduce_81(val, _values, result)
    @lexer.status = :initial; @lexer.end_symbol = nil
    result
  end
.,.,

# reduce 82 omitted

# reduce 83 omitted

# reduce 84 omitted

# reduce 85 omitted

# reduce 86 omitted

# reduce 87 omitted

# reduce 88 omitted

# reduce 89 omitted

# reduce 90 omitted

# reduce 91 omitted

# reduce 92 omitted

# reduce 93 omitted

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class NewParser
end   # module Lrama
