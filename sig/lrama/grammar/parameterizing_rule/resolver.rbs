module Lrama
  class Grammar
    class ParameterizingRule
      class Resolver
        attr_accessor created_lhs_list: Array[Lexer::Token]

        @rules: Array[Grammar::ParameterizingRule::Rule]

        def initialize: () -> void
        def add_parameterizing_rule: (Grammar::ParameterizingRule::Rule rule) -> void
        def find_rule: (Lexer::Token::InstantiateRule token) -> Grammar::ParameterizingRule::Rule?
        def find_inline: (Lexer::Token token) -> Grammar::ParameterizingRule::Rule?
        def created_lhs: (String lhs_s_value) -> Lexer::Token?

        private

        def select_not_inline_rules: () -> Array[Grammar::ParameterizingRule::Rule]
        def select_rules: (Lexer::Token::InstantiateRule token) -> Array[Grammar::ParameterizingRule::Rule]
        def select_rules_by_name: (String rule_name) -> Array[Grammar::ParameterizingRule::Rule]
      end
    end
  end
end
