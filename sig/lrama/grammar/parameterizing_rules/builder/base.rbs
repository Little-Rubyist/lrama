module Lrama
  class Grammar
    class ParameterizingRules
      class Builder
        class Base
          attr_reader build_token: Lexer::Token::Ident

          def initialize: (Lexer::Token::InstantiateRule token, Counter rule_counter, untyped lhs_tag, Lexer::Token::UserCode? user_code, Lexer::Token? precedence_sym, Integer? line) -> void
          def build: () -> Array[Rule]

          @args: Array[Lexer::Token]
          @token: Lexer::Token::InstantiateRule
          @key: Symbol
          @rule_counter: Counter
          @lhs_tag: untyped
          @user_code: Lexer::Token::UserCode?
          @precedence_sym: Lexer::Token?
          @line: Integer?
          @expected_argument_num: Integer

          private

          def validate_argument_number!: () -> void
        end
      end
    end
  end
end
