module Lrama
  class States
    include Grammar::_DelegatedMethods

    @grammar: untyped

    @warning: untyped

    @trace_state: untyped

    @states: Array[State]

    @direct_read_sets: untyped

    @reads_relation: untyped

    @read_sets: untyped

    @includes_relation: untyped

    @lookback_relation: untyped

    @follow_sets: untyped

    @la: untyped

    extend Forwardable

    include Lrama::Trace::Duration

    attr_reader states: Array[State]

    attr_reader reads_relation: untyped

    attr_reader includes_relation: untyped

    attr_reader lookback_relation: untyped

    def initialize: (untyped grammar, untyped warning, ?trace_state: bool) -> void

    def compute: () -> untyped

    def reporter: () -> untyped

    def states_count: () -> untyped

    def direct_read_sets: () -> untyped

    def read_sets: () -> untyped

    def follow_sets: () -> untyped

    def la: () -> untyped

    private

    def sr_conflicts: () -> untyped

    def rr_conflicts: () -> untyped

    def trace_state: () { (untyped) -> untyped } -> (untyped | nil)

    def create_state: (untyped accessing_symbol, untyped kernels, untyped states_created) -> (::Array[untyped | false] | ::Array[untyped | true])

    def setup_state: (untyped state) -> untyped

    def enqueue_state: (untyped states, untyped state) -> untyped

    def compute_lr0_states: () -> untyped

    def nterm_transitions: () -> untyped

    def compute_direct_read_sets: () -> untyped

    def compute_reads_relation: () -> untyped

    def compute_read_sets: () -> untyped

    def transition: (untyped state, untyped symbols) -> untyped

    def compute_includes_relation: () -> untyped

    def compute_lookback_relation: () -> untyped

    def compute_follow_sets: () -> untyped

    def compute_look_ahead_sets: () -> untyped

    def bitmap_to_terms: (untyped bit) -> untyped

    def compute_conflicts: () -> untyped

    def compute_shift_reduce_conflicts: () -> untyped

    def compute_reduce_reduce_conflicts: () -> untyped

    def compute_default_reduction: () -> untyped

    def check_conflicts: () -> untyped
  end
end
