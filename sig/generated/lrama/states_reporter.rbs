# Generated from lib/lrama/states_reporter.rb with RBS::Inline

module Lrama
  class StatesReporter
    include Lrama::Report::Duration

    @states: Lrama::States

    # @rbs (Lrama::States states) -> void
    def initialize: (Lrama::States states) -> void

    # @rbs (IO io, **Hash[Symbol, bool] options) -> void
    def report: (IO io, **Hash[Symbol, bool] options) -> void

    private

    # @rbs (IO io, bool grammar, bool rules, bool terms, bool states, bool itemsets, bool lookaheads, bool solved, bool counterexamples, bool verbose) -> void
    def _report: (IO io, bool grammar, bool rules, bool terms, bool states, bool itemsets, bool lookaheads, bool solved, bool counterexamples, bool verbose) -> void

    # @rbs (IO io) -> void
    def report_unused_terms: (IO io) -> void

    # @rbs (IO io) -> void
    def report_unused_rules: (IO io) -> void

    # @rbs (IO io) -> void
    def report_conflicts: (IO io) -> void

    # @rbs (IO io) -> void
    def report_grammar: (IO io) -> void

    # @rbs (IO io, bool itemsets, bool lookaheads, bool solved, bool counterexamples, bool verbose) -> void
    def report_states: (IO io, bool itemsets, bool lookaheads, bool solved, bool counterexamples, bool verbose) -> void
  end
end
