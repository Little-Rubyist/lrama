# Generated from lib/lrama/state/inadequacy_annotation.rb with RBS::Inline

module Lrama
  class State
    class InadequacyAnnotation
      type action = Action::Shift | Action::Goto | Action::Reduce

      attr_accessor state: State

      attr_accessor token: Grammar::Symbol

      attr_accessor actions: Array[Action::Shift | Action::Reduce]

      attr_accessor contribution_matrix: Hash[Action::Shift | Action::Reduce, Hash[States::Item, bool]]

      # @rbs (State state, Grammar::Symbol token, Array[Action::Shift | Action::Reduce] actions, Hash[Action::Shift | Action::Reduce, Hash[States::Item, bool]] contribution_matrix) -> void
      def initialize: (State state, Grammar::Symbol token, Array[Action::Shift | Action::Reduce] actions, Hash[Action::Shift | Action::Reduce, Hash[States::Item, bool]] contribution_matrix) -> void

      # @rbs (States::Item item) -> bool
      def contributed?: (States::Item item) -> bool

      # @rbs (Array[Hash[Action::Shift | Action::Reduce, Hash[States::Item, bool]]] another_matrixes) -> void
      def merge_matrix: (Array[Hash[Action::Shift | Action::Reduce, Hash[States::Item, bool]]] another_matrixes) -> void

      # Definition 3.42 (dominant_contribution)
      #
      # @rbs (State::lookahead_set lookaheads) -> Array[Action::Shift | Action::Reduce]?
      def dominant_contribution: (State::lookahead_set lookaheads) -> Array[Action::Shift | Action::Reduce]?

      # @rbs (Array[Action::Shift | Action::Reduce] actions) -> Array[Action::Shift | Action::Reduce]
      def resolve_conflict: (Array[Action::Shift | Action::Reduce] actions) -> Array[Action::Shift | Action::Reduce]

      # @rbs () -> String
      def to_s: () -> String

      private

      # @rbs () -> String
      def actions_to_s: () -> String

      # @rbs () -> String
      def contribution_matrix_to_s: () -> String
    end
  end
end
